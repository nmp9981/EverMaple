using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

/// <summary>
/// 아이템 속성
/// </summary>
public enum ItemAttribute{
    Equipment,
    consume,
    Count
}

/// <summary>
/// 소비 아이템 속성
/// </summary>
public enum ConsumeAttribute
{
    HPPosion,
    MPPosion,
    BuffPosion,
    Etc,
    Count
}

/// <summary>
/// 소비 아이템 속성
/// </summary>
public struct ConsumeItem
{
    public Sprite sprite;//이미지
    public string name;//이름
    public int count;//몇개남았는지
}

public class ItemManager : MonoBehaviour
{
    public static ItemManager itemInstance;

    private void Awake()
    {
        ItemSingletonObjectLoad();
    }

    void ItemSingletonObjectLoad()
    {
        if (itemInstance == null) //instance가 null. 즉, 시스템상에 존재하고 있지 않을때
        {
            itemInstance = this; //내자신을 instance로 넣어줍니다.
            DontDestroyOnLoad(gameObject); //OnLoad(씬이 로드 되었을때) 자신을 파괴하지 않고 유지
        }
        else
        {
            if (itemInstance != this) //instance가 내가 아니라면 이미 instance가 하나 존재하고 있다는 의미
                Destroy(this.gameObject); //둘 이상 존재하면 안되는 객체이니 방금 AWake된 자신을 삭제
        }
    }
    /// <summary>
    /// 필드에 있는 아이템들 파괴
    /// </summary>
    public void ClearItemInFeild()
    {
        foreach(var item in fieldDropItems)
        {
            Destroy(item.gameObject);
        }
        fieldDropItems.Clear();
    }

    public void GetConsumeItem()
    {

    }

    /// <summary>
    /// HP포션 등록, A키 고정
    /// </summary>
    public void EnrollHPPosion(string itemName)
    {
        Sprite posionSprite = null;
        string posionCountText = string.Empty;
        switch (itemName)
        {
            case "빨간포션":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[0].sprite;
                posionCountText = consumeItems[0].count.ToString();
                break;
            case "주황포션":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[1].sprite;
                posionCountText = consumeItems[1].count.ToString();
                break;
            case "하얀포션":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[2].sprite;
                posionCountText = consumeItems[2].count.ToString();
                break;
            case "장어구이":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[5].sprite;
                posionCountText = consumeItems[5].count.ToString();
                break;
            case "쭈쭈바":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[7].sprite;
                posionCountText = consumeItems[7].count.ToString();
                break;
            default:
                break;
        }

        //HP물약이 아님
        if (posionSprite == null)
            return;

        //A키로 등록
        keySlotImage[0].transform.GetChild(0).GetComponent<Image>().sprite = posionSprite;
        keySlotImage[0].transform.GetChild(1).GetComponent<TextMeshProUGUI>().text = posionCountText;
    }
    /// <summary>
    /// MP포션 등록, D키 고정
    /// </summary>
    public void EnrollMPPosion(string itemName)
    {
        Sprite posionSprite = null;
        string posionCountText = string.Empty;
        switch (itemName)
        {
            case "파란포션":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[3].sprite;
                posionCountText = consumeItems[3].count.ToString();
                break;
            case "마나엘릭서":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[4].sprite;
                posionCountText = consumeItems[4].count.ToString();
                break;
            case "맑은물":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[6].sprite;
                posionCountText = consumeItems[6].count.ToString();
                break;
            case "팥빙수":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[8].sprite;
                posionCountText = consumeItems[8].count.ToString();
                break;
            default:
                break;
        }

        //MP물약이 아님
        if (posionSprite == null)
            return;

        //D키로 등록
        keySlotImage[1].transform.GetChild(0).GetComponent<Image>().sprite = posionSprite;
        keySlotImage[1].transform.GetChild(1).GetComponent<TextMeshProUGUI>().text = posionCountText;
    }
    /// <summary>
    /// 엘릭서 등록
    /// TODO : 아이템 드랍 구현 후 작성
    /// </summary>
    public void EnrollElixerPosion(string itemName)
    {
        return;

        Sprite posionSprite = null;
        string posionCountText = string.Empty;
        switch (itemName)
        {
            case "엘릭서":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[0].sprite;
                posionCountText = consumeItems[0].count.ToString();
                break;
            case "파워엘릭서":
                //이미지, 남은 개수 표시
                posionSprite = consumeItems[1].sprite;
                posionCountText = consumeItems[1].count.ToString();
                break;         
            default:
                break;
        }

        //엘릭서가 아님
        if (posionSprite == null)
            return;

        //F키로 등록
        keySlotImage[12].transform.GetChild(0).GetComponent<Image>().sprite = posionSprite;
        keySlotImage[12].transform.GetChild(1).GetComponent<TextMeshProUGUI>().text = posionCountText;
    }
    /// <summary>
    /// 버프 등록
    /// </summary>
    public void EnrollBuffPosion(string itemName)
    {

    }

    //아이템 사용
    public void UseConsumeItem(string itemName)
    {

    }
    public void UseHPPosion(string itemName)
    {

    }

    #region 아이템 데이터
    public const string consumeTag = "ConsumeItem";

    //필드에 떨어진 아이템들
    public List<GameObject> fieldDropItems = new List<GameObject>();

    //장비, 소비 아이템 목록들
    public List<GameObject> equipmentItems = new List<GameObject>();
    public Dictionary<int, ConsumeItem> consumeItems = new Dictionary<int, ConsumeItem>();
    public List<Sprite> consumeItemImage = new List<Sprite>();

    //키세팅 용 바인딩
    public List<GameObject> keySlotImage = new List<GameObject>(); 

    //회복량
    private int healHPAmount;
    private int healMPAmount;
    public int HealHPAmount { get { return healHPAmount; } set { healHPAmount = value; } }
    public int HealMPAmount { get { return healMPAmount; } set { healMPAmount = value; } }
    #endregion
}
